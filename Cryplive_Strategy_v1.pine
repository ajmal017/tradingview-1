//@version=4

// trinhminhtriet
// https://triettrinh.com
// BTC Address: 16Qg7G26iXKTPeGPLxofyptjT7UF85fMa5
// Minimum deposit amount: 0.001 BTC

// ADI DI
// RSI Divergence
// Stochastic
study("Cryplive_Strategy_v1")

adxlen = input(9, title="ADX Smoothing")
dilen = input(14, title="DI Length")
ADX_Entry = input(15, title="ADX Entry")

//ADX
dirmov(len) =>
	up = change(high)
	down = -change(low)
	truerange = rma(tr, len)
	plus = fixnan(100 * rma(up > down and up > 0 ? up : 0, len) / truerange)
	minus = fixnan(100 * rma(down > up and down > 0 ? down : 0, len) / truerange)
	[plus, minus]

adx(dilen, adxlen) => 
	[plus, minus] = dirmov(dilen)
	sum = plus + minus
	adx = 100 * rma(abs(plus - minus) / (sum == 0 ? 1 : sum), adxlen)
	[adx, plus, minus]

[sig, up, down] = adx(dilen, adxlen)
diplus = up
diminus = down
adx_signal = sig

// plot(ADX_Entry, color=color.white, linewidth=1)
adx_color = diminus-diplus > 0 ? color.red : color.lime
// bgcolor(adx_color, transp=90)
plot(adx_signal, title="ADX", color=adx_color, linewidth=2, transp=30)
plot(adx_signal, title="ADX", color=adx_color, style=plot.style_columns, linewidth = 2, transp=90)
plot(diplus, color=color.green, linewidth=1, title="DI+", transp=90)
plot(diminus, color=color.red, linewidth=1, title="DI-", transp=90)
plot(cross(diplus,diminus) ? diminus : na, color=adx_color, style=plot.style_circles, linewidth=3, title="Cross DI") 


//RSI Divergence
rsi_src_fast = close, rsi_len_fast = input(5, minval=1, title="Length Fast RSI")
rsi_src_slow = close, rsi_len_slow = input(14,minval=1, title="Length Slow RSI")
rsi_up_fast = rma(max(change(rsi_src_fast), 0), rsi_len_fast)
rsi_down_fast = rma(-min(change(rsi_src_fast), 0), rsi_len_fast)
rsi_fast = rsi_down_fast == 0 ? 100 : rsi_up_fast == 0 ? 0 : 100 - (100 / (1 + rsi_up_fast / rsi_down_fast))
rsi_up_slow = rma(max(change(rsi_src_slow), 0), rsi_len_slow)
rsi_down_slow = rma(-min(change(rsi_src_slow), 0), rsi_len_slow)
rsi_slow = rsi_down_slow == 0 ? 100 : rsi_up_slow == 0 ? 0 : 100 - (100 / (1 + rsi_up_slow / rsi_down_slow))
plot_rsi_fast = plot(rsi_fast, title="Fast RSI", color=color.blue, linewidth = 1, transp=80)
plot_rsi_slow = plot(rsi_slow, title="Slow RSI", color=color.yellow, linewidth = 1, transp=30)
rsi_divergence = rsi_fast - rsi_slow
plot(rsi_divergence, title="RSI Divergence", color = rsi_divergence > 0 ? color.lime:color.red, linewidth = 2, transp=60)
// band1 = hline(70,color=green)
// band0 = hline(30,color=red)
band = hline(0)

//Stochastic
smoothK = input(3, minval=1, title="smoothK")
smoothD = input(3, minval=1, title="smoothD")
lengthRSI = rsi_len_slow 
lengthStoch = input(14, minval=1, title="Length Stochastic")

rsi1 = rsi(close, lengthRSI)
stoch_k = sma(stoch(rsi1, rsi1, rsi1, lengthStoch), smoothK)
stoch_d = sma(stoch_k, smoothD)
plot(stoch_k, color=color.purple, title="Stoch K", linewidth = 1, transp=80)
plot(stoch_d, color=color.orange, title="Stoch D", linewidth = 1, transp=80)

stoch_up = crossover(stoch_k,stoch_d)
plot(stoch_up ? stoch_k : na, color=color.green, style=plot.style_cross, linewidth=3, title="Cross Stochastic") 
// bgcolor(stoch_up ? color.lime : na, transp=40)
// plotchar(stoch_up ? stoch_up : na, title="Stoch LE", char='Stoch LE', location=location.bottom, color=color.lime, transp=0, offset=0)

stoch_down = crossunder(stoch_k,stoch_d)
plot(stoch_down ? stoch_k : na, color=color.red, style=plot.style_cross, linewidth=3, title="Cross Stochastic") 
// bgcolor(stoch_down ? color.red : na, transp=40)
// plotchar(stoch_down ? stoch_down : na, title="Stoch LE", char='Stoch LE', location=location.bottom, color=color.lime, transp=0, offset=0)


long_signal = crossover(rsi_divergence, 0) and (stoch_k > stoch_d) and (adx_signal>ADX_Entry)
short_signal = crossunder(rsi_divergence, 0) and (stoch_k < stoch_d) and (adx_signal>ADX_Entry)

long_color = color.lime
short_color = color.red
// bgcolor(long_signal ? color.lime : na, transp=40)
// bgcolor(short_signal ? color.red : na, transp=40)
plotshape(long_signal, "LONG", shape.triangleup, location.bottom, long_color, size = size.small)
plotshape(short_signal, "SHORT", shape.triangledown, location.top, short_color, size = size.small)
plotchar(long_signal ? long_signal : na, title="Long Signal", char='B', location=location.bottom, color=color.white, transp=0, offset=0)
plotchar(short_signal ? short_signal : na, title="Short Signal", char='S', location=location.top, color=color.white, transp=0, offset=0)